#
# makefile 
#
# LIB_DIR
# SRC_DIR
#

TARGET = GrabCut
SRC_DIR=./src

#
# Determine the platform (Linux, Mac OS X, Windows+Cygwin etc.)
#
# On Linux,    this should be 'Linux'
# On Mac OS X, this should be 'Darwin'
#

OSNAME := $(shell uname -s)
MACHINE := $(shell uname -m)

ifeq ($(OSNAME),Linux)
  ifeq ($(MACHINE),x86_64)
    PLATFORM := LINUX64
  else
    PLATFORM := LINUX
  endif
else 
  ifeq ($(OSNAME),Darwin)
    PLATFORM := MAC_OS_X
  else
    PLATFORM := OTHER
  endif
endif

#-----------------------------------------------------------------------------
# Choose a compiler & its options
#--------------------------------------------------------------------------
g++ = g++
CXX = g++

ifeq ($(CXX),icpc)
  OPTS = -pipe -g -MMD -ip -vec-report0 -diag-disable cpu-dispatch
else 
  OPTS = -pipe -g -MMD
endif

ifeq ($(PLATFORM),MAC_OS_X)
 OPTS += -DMACOS -Wreturn-type -frounding-math
endif

OPTS += -frounding-math

#--------------------------------------------------------------------
# Xlib and OpenGL
#--------------------------------------------------------------------

ifeq ($(PLATFORM),MAC_OS_X)
   GL_INCL = -I/opt/local/include
   GL_LIB = -L/opt/local/lib  -lglui -framework OpenGL -framework GLUT -framework Foundation
else
   GL_LIB = -lglui -lGL -lGLU -lglut
endif


#--------------------------------------------------------------------
# ACD Code structure 
#--------------------------------------------------------------------

ACD_SUB_DIRS= Graph . \
			  gui gui/GL

ACD_INCL=$(addprefix -I,$(ACD_SUB_DIRS))


#- ------------------------------------------------------------------
# Add GLEW for openGL extension detection
#--------------------------------------------------------------------

GLEW_DIR = $(LIB_DIR)/glew
GLEW_INCL= -I${GLEW_DIR}/include
ifeq ($(PLATFORM),MAC_OS_X)
  GLEW_LIB = -L${GLEW_DIR}/lib -lGLEW.osx
else 
  ifeq ($(PLATFORM),LINUX64)
	GLEW_LIB = -lGLEW
  else
	GLEW_LIB = -L${GLEW_DIR}/lib -lGLEW.linux
  endif
endif


#--------------------------------------------------------------------
INCLUDE = -I. $(ACD_INCL) 
LIB = $(GL_LIB) $(GLEW_LIB) $(MPFR_LIB) $(CGAL_LIB) $(GSL_LIB)

#--------------------------------------------------------------------

CFLAGS     = $(OPTS) $(INCLUDE)
CXXFLAGS   = $(CFLAGS)

#--------------------------------------------------------------------
SRCS=$(wildcard $(addsuffix /*.cpp,$(ACD_SUB_DIRS)))
OBJS=${SRCS:.cpp=.o}
DFILES=${SRCS:.cpp=.d}

####### Build rules

all: $(TARGET)

$(TARGET): $(OBJS)
	$(CXX) ${CXXFLAGS} -o $@ $(OBJS) $(LIB) 

clean:
	-rm -f $(OBJS) $(TARGET) $(DFILES) Dependencies

#--------------------------------------------------------------------
.SUFFIXES: .cpp

.cpp.o: 
	${CXX} ${CXXFLAGS} -c $< -o $@
	cat $*.d >> Dependencies
	rm -f $*.d

Dependencies:
	touch Dependencies

-include Dependencies
